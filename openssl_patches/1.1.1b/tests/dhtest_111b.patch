diff --git a/test/dhtest.c b/test/dhtest.c
index 5b2fd679..cba4c5e5 100644
--- a/test/dhtest.c
+++ b/test/dhtest.c
@@ -24,12 +24,81 @@
 
 static int cb(int p, int n, BN_GENCB *arg);
 
+
+static const unsigned char dhtest_1024_p[] =
+{
+        0xEB, 0x33, 0x0E, 0x7B, 0x36, 0xDB, 0xD1, 0x41,
+        0xD4, 0x55, 0x24, 0x31, 0x79, 0xD2, 0xA1, 0x97,
+        0xDC, 0xD3, 0xB8, 0x7A, 0xEF, 0xEE, 0x1A, 0xA1,
+        0xF7, 0x14, 0xB1, 0x6E, 0x9C, 0x83, 0xD7, 0xA8,
+        0x4E, 0xAC, 0x4F, 0xAF, 0xD1, 0xBD, 0x2D, 0x61,
+        0xC1, 0x5D, 0x0F, 0xA4, 0x2A, 0x53, 0x43, 0x98,
+        0x76, 0x80, 0x25, 0x9E, 0x56, 0x75, 0x96, 0xA0,
+        0x5C, 0x73, 0xCC, 0x1D, 0x8F, 0x61, 0xE5, 0xC9,
+        0x07, 0x25, 0xA0, 0x89, 0x22, 0xBB, 0x86, 0x68,
+        0x5E, 0x1F, 0xFF, 0x37, 0xD5, 0x4A, 0xE9, 0xDF,
+        0x4E, 0xBE, 0x03, 0x7C, 0x34, 0x94, 0x5E, 0x64,
+        0x6C, 0x59, 0x20, 0xAB, 0xD3, 0xBE, 0x8D, 0xE1,
+        0x92, 0x35, 0xD5, 0x11, 0x46, 0x44, 0x47, 0x6B,
+        0xE9, 0x7C, 0x31, 0x0B, 0x91, 0xF6, 0xC9, 0x84,
+        0xB6, 0x12, 0x2B, 0x36, 0x57, 0x1B, 0x31, 0x68,
+        0x31, 0x34, 0x3F, 0x57, 0x88, 0x43, 0x14, 0xE7
+};
+static const unsigned char dhtest_1024_q[] =
+{
+        0xFF, 0x99, 0x89, 0x34, 0xEA, 0x87, 0x2B, 0x97,
+        0x3E, 0xE9, 0x6A, 0x89, 0x7C, 0x3E, 0x7B, 0xF4,
+        0x9F, 0x2A, 0x28, 0xEF
+};
+static const unsigned char dhtest_1024_g[] =
+{
+        0x9E, 0x4D, 0x07, 0x06, 0xAF, 0x00, 0xC5, 0x55,
+        0x88, 0x83, 0x8A, 0x4E, 0xB1, 0x25, 0x44, 0xEF,
+        0x24, 0x10, 0xD6, 0x1A, 0xA3, 0xFA, 0x66, 0x78,
+        0xA2, 0x48, 0xBE, 0x2F, 0x93, 0x9E, 0xB2, 0x2B,
+        0x2F, 0x22, 0xCC, 0x2F, 0x0F, 0x07, 0x9E, 0x4C,
+        0x23, 0xB5, 0x08, 0x6A, 0x13, 0xDC, 0x24, 0xD1,
+        0xFE, 0xBA, 0x02, 0x1E, 0x97, 0xF8, 0xC7, 0xDE,
+        0x8C, 0x1D, 0xA2, 0xD4, 0xF8, 0xE2, 0x86, 0xE4,
+        0x0D, 0x84, 0xC0, 0xED, 0x9B, 0xB1, 0x1B, 0x35,
+        0x22, 0x73, 0x80, 0xA0, 0x27, 0x6C, 0xE7, 0x8E,
+        0x81, 0x58, 0x5E, 0x71, 0xFC, 0xBE, 0x88, 0x71,
+        0x58, 0x4E, 0x8D, 0xCD, 0x3C, 0xEF, 0xA6, 0x03,
+        0x62, 0xA0, 0x13, 0x7B, 0xD3, 0xCF, 0x98, 0x0C,
+        0x87, 0xBF, 0x77, 0xAC, 0x96, 0x43, 0x48, 0x0D,
+        0xA6, 0x8D, 0x6A, 0x44, 0xCE, 0xF6, 0xD5, 0x38,
+        0x32, 0xEC, 0x7E, 0xA7, 0x1A, 0x49, 0xD9, 0xE0
+};
+static const unsigned char dhtest_1024_priv[] = {
+        0x9D, 0x9E, 0xDA, 0xB5, 0xE3, 0x93, 0x26, 0x0F,
+        0x9E, 0x43, 0x06, 0xEA, 0xAB, 0xFF, 0xAD, 0x8F,
+        0x3F, 0x75, 0xCD, 0x4D
+};
+static const unsigned char dhtest_1024_pub[] = {
+        0x0B, 0xBF, 0xEC, 0x4A, 0x36, 0x99, 0x87, 0xF7,
+        0xE3, 0xBA, 0x3F, 0x2D, 0x6C, 0xD0, 0x61, 0xF7,
+        0x16, 0x62, 0xDE, 0x80, 0x6E, 0xB6, 0x31, 0x59,
+        0x46, 0xDF, 0xFD, 0x48, 0x7A, 0x30, 0x36, 0xD7,
+        0x37, 0x55, 0x85, 0x5E, 0xE8, 0x10, 0xF8, 0xDD,
+        0x10, 0xAA, 0xC6, 0xA2, 0xB3, 0x68, 0xFE, 0x13,
+        0x9B, 0x7E, 0x3A, 0xAB, 0x4B, 0xFB, 0xCE, 0x65,
+        0x33, 0x27, 0xDC, 0x90, 0xD9, 0xBB, 0xA1, 0x9C,
+        0x87, 0xA1, 0xAD, 0x72, 0x3B, 0x80, 0xDD, 0x27,
+        0x03, 0x95, 0xD1, 0xFD, 0x09, 0x42, 0x5E, 0xFD,
+        0xAC, 0x22, 0xAA, 0x00, 0x41, 0xA1, 0x7E, 0x80,
+        0xBE, 0x15, 0xA6, 0x9E, 0xFE, 0x07, 0xEA, 0xB0,
+        0xAB, 0xFA, 0x88, 0x3B, 0xB2, 0x9B, 0x66, 0x47,
+        0xFE, 0x62, 0xC1, 0xAC, 0x21, 0xFD, 0xC2, 0x54,
+        0xBE, 0x00, 0xE1, 0x19, 0xFE, 0x91, 0x67, 0xF7,
+        0xBF, 0x87, 0x5C, 0xDC, 0xBC, 0xB5, 0x2E, 0x97
+};
+
 static int dh_test(void)
 {
     DH *dh = NULL;
     BIGNUM *p = NULL, *q = NULL, *g = NULL;
     const BIGNUM *p2, *q2, *g2;
-    BIGNUM *priv_key = NULL;
+    BIGNUM *priv_key = NULL, *pub_key = NULL;
     const BIGNUM *pub_key2, *priv_key2;
     BN_GENCB *_cb = NULL;
     DH *a = NULL;
@@ -48,17 +117,17 @@ static int dh_test(void)
         || !TEST_ptr(p = BN_new())
         || !TEST_ptr(q = BN_new())
         || !TEST_ptr(g = BN_new())
-        || !TEST_ptr(priv_key = BN_new()))
+        || !TEST_ptr(priv_key = BN_new())
+        || !TEST_ptr(pub_key = BN_new()))
         goto err1;
 
     /*
      * I) basic tests
      */
 
-    /* using a small predefined Sophie Germain DH group with generator 3 */
-    if (!TEST_true(BN_set_word(p, 4079L))
-        || !TEST_true(BN_set_word(q, 2039L))
-        || !TEST_true(BN_set_word(g, 3L))
+    if (!TEST_true(BN_bin2bn(dhtest_1024_p, sizeof(dhtest_1024_p), p))
+        || !TEST_true(BN_bin2bn(dhtest_1024_q, sizeof(dhtest_1024_q), q))
+        || !TEST_true(BN_bin2bn(dhtest_1024_g, sizeof(dhtest_1024_g), g))
         || !TEST_true(DH_set0_pqg(dh, p, q, g)))
         goto err1;
 
@@ -76,7 +145,7 @@ static int dh_test(void)
         goto err2;
 
     /* set the private key only*/
-    if (!TEST_true(BN_set_word(priv_key, 1234L))
+    if (!TEST_true(BN_bin2bn(dhtest_1024_priv, sizeof(dhtest_1024_priv), priv_key))
         || !TEST_true(DH_set0_key(dh, NULL, priv_key)))
         goto err2;
 
@@ -109,7 +178,9 @@ static int dh_test(void)
         goto err3;
 
     /* check whether the public key was calculated correctly */
-    TEST_uint_eq(BN_get_word(pub_key2), 3331L);
+    if (!TEST_true(BN_bin2bn(dhtest_1024_pub, sizeof(dhtest_1024_pub), pub_key))
+        || !TEST_true(BN_cmp(pub_key, pub_key2) == 0))
+        goto err3;
 
     /*
      * II) key generation
@@ -120,7 +191,7 @@ static int dh_test(void)
         goto err3;
     BN_GENCB_set(_cb, &cb, NULL);
     if (!TEST_ptr(a = DH_new())
-            || !TEST_true(DH_generate_parameters_ex(a, 64,
+            || !TEST_true(DH_generate_parameters_ex(a, 1024,
                                                     DH_GENERATOR_5, _cb)))
         goto err3;
 
